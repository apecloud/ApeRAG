apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml -c -o deploy/kubechat
    kompose.version: 1.26.0 (40646f47)
  labels:
    {{- include "kubechat.labels" . | nindent 4 }}
  name: celeryworker
spec:
  replicas: {{ index .Values "celery-worker" "replicaCount" }}
  selector:
    matchLabels:
      {{- include "kubechat.selectorLabels" . | nindent 6 }}
      {{- include "celeryworker.labels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubechat.selectorLabels" . | nindent 8 }}
        {{- include "celeryworker.labels" . | nindent 8 }}
    spec:
      containers:
        - command:
            - /bin/sh
            - -c
            - |
              mkdir -p /data/.cache
              mkdir -p /root/.cache
              ln -s /data/.cache/huggingface /root/.cache/
              ln -s /data/.cache/torch /root/.cache/
              /app/scripts/entrypoint.sh /app/scripts/start-celery-worker.sh
          env:
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.redisSecret }}
                  key: host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.redisSecret }}
                  key: port
            - name: REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.redisSecret }}
                  key: username
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.redisSecret }}
                  key: password
            - name: DJANGO_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_LOG_LEVEL
                  name: kubechat-config
            - name: POSTGRES_DB
              value: "{{ .Values.django.metaDBDatabase }}"
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.metaDBSecret }}
                  key: host
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.metaDBSecret }}
                  key: port
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.metaDBSecret }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.metaDBSecret }}
                  key: password

            - name: VECTOR_DB_CONTEXT
              valueFrom:
                configMapKeyRef:
                  key: VECTOR_DB_CONTEXT
                  name: kubechat-config
            - name: VECTOR_DB_TYPE
              valueFrom:
                configMapKeyRef:
                  key: VECTOR_DB_TYPE
                  name: kubechat-config
            - name: MEDIA_ROOT
              value: /data/media
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: EMBEDDING_MODEL
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_MODEL
                  name: kubechat-config
            - name: EMBEDDING_DEVICE
              value: {{ index .Values "celery-worker" "embeddingDevice" }}
            - name: WHISPER_HOST
              valueFrom:
                configMapKeyRef:
                  key: WHISPER_HOST
                  name: kubechat-config
            - name: PADDLEOCR_HOST
              valueFrom:
                configMapKeyRef:
                  key: PADDLEOCR_HOST
                  name: kubechat-config
            - name: EMBEDDING_BACKEND
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_BACKEND
                  name: kubechat-config
            - name: EMBEDDING_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_SERVICE_URL
                  name: kubechat-config
            - name: EMBEDDING_SERVICE_MODEL
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_SERVICE_MODEL
                  name: kubechat-config
            - name: EMBEDDING_SERVICE_MODEL_UID
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_SERVICE_MODEL_UID
                  name: kubechat-config
            {{- if .Values.django.openaiAPIKey }}
            - name: OPENAI_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: OPENAI_API_KEY
                  name: kubechat-config
            {{- end}}
            {{- if .Values.django.openaiProxy }}
            - name: OPENAI_API_PROXY
              valueFrom:
                configMapKeyRef:
                  key: OPENAI_API_PROXY
                  name: kubechat-config
            {{- end}}
            - name: ENABLE_QA_GENERATOR
              valueFrom:
                configMapKeyRef:
                  key: ENABLE_QA_GENERATOR
                  name: kubechat-config
            - name: MODEL_FAMILIES
              valueFrom:
                configMapKeyRef:
                  key: MODEL_FAMILIES
                  name: kubechat-config
            - name: ES_HOST
              valueFrom:
                configMapKeyRef:
                  key: ES_HOST
                  name: kubechat-config
          image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          name: kubechat-celeryworker
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with index .Values "celery-worker" "resources" }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /data
              name: data
      restartPolicy: Always
      {{- with index .Values "celery-worker" "affinity" }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        # shared uploaded files between django and celery
        - name: data
          hostPath:
            path: {{ .Values.django.dataPath }}
