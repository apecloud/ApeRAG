apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yml -c -o deploy/kubechat
    kompose.version: 1.26.0 (40646f47)
  labels:
    {{- include "kubechat.labels" . | nindent 4 }}
  name: django
spec:
  replicas: {{ .Values.django.replicaCount }}
  selector:
    matchLabels:
      {{- include "kubechat.selectorLabels" . | nindent 6 }}
      {{- include "django.labels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubechat.selectorLabels" . | nindent 8 }}
        {{- include "django.labels" . | nindent 8 }}
    spec:
      initContainers:
        - name: prepare-models
          image: curlimages/curl:8.4.0
          securityContext:
            runAsUser: 0
            privileged: true
          command:
            - /bin/sh
            - -c
            - |
              # fail fast
              set -e
              mkdir -p /root/.cache
              mkdir -p /data/.cache/huggingface
              ln -s /data/.cache/huggingface /root/.cache/
              mkdir -p /data/.cache/torch
              ln -s /data/.cache/torch /root/.cache/

              # prepare rerank model
              if [ "$RERANK_BACKEND" = "local" ] && [ ! -d /data/models/bge-reranker-large ]; then
                echo "downloading rerank model"
                curl --progress-bar -OL https://llm-store.oss-cn-beijing.aliyuncs.com/bge-reranker-large.tar
                tar -xvf bge-reranker-large.tar
                mkdir -p /data/models
                mv bge-reranker-large /data/models/
                echo "successfully downloaded rerank model"
              else
                echo "rerank model exists, skip downloading"
              fi

              # prepare bge model
              if [ "$EMBEDDING_BACKEND" = "local" ] && [ ! -d /data/.cache/torch/sentence_transformers ]; then
                echo "downloading bge model"
                curl --progress-bar -OL https://llm-store.oss-cn-beijing.aliyuncs.com/BAAI_bge-large-zh.tar
                tar -xvf BAAI_bge-large-zh.tar
                mkdir -p /data/.cache/torch/sentence_transformers
                mv BAAI_bge-large-zh/ /data/.cache/torch/sentence_transformers/
                echo "successfully downloaded bge model"
              else
                echo "bge model exists, skip downloading"
              fi
          env:
            - name: EMBEDDING_BACKEND
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_BACKEND
                  name: kubechat-config
            - name: RERANK_BACKEND
              valueFrom:
                configMapKeyRef:
                  key: RERANK_BACKEND
                  name: kubechat-config
          volumeMounts:
            - mountPath: /data
              name: data
      containers:
        - command:
            - /bin/sh
            - -c
            - |
              mkdir -p /data/.cache
              mkdir -p /root/.cache
              ln -s /data/.cache/huggingface /root/.cache/
              ln -s /data/.cache/torch /root/.cache/
              /app/scripts/entrypoint.sh /app/scripts/start-django.sh
          env:
            - name: AUTH_TYPE
              valueFrom:
                configMapKeyRef:
                  key: AUTH_TYPE
                  name: kubechat-config
            {{ if eq .Values.django.authType "auth0" }}
            - name: AUTH0_CLIENT_ID
              valueFrom:
                configMapKeyRef:
                  key: AUTH0_CLIENT_ID
                  name: kubechat-config
            - name: AUTH0_DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: AUTH0_DOMAIN
                  name: kubechat-config
            {{ else if eq .Values.django.authType "authing" }}
            - name: AUTHING_APP_ID
              valueFrom:
                configMapKeyRef:
                  key: AUTHING_APP_ID
                  name: kubechat-config
            - name: AUTHING_DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: AUTHING_DOMAIN
                  name: kubechat-config
            {{- end }}
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.redisSecret }}
                  key: host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.redisSecret }}
                  key: port
            - name: REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.redisSecret }}
                  key: username
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.redisSecret }}
                  key: password
            - name: CELERY_FLOWER_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: CELERY_FLOWER_PASSWORD
                  name: kubechat-config
            - name: CELERY_FLOWER_USER
              valueFrom:
                configMapKeyRef:
                  key: CELERY_FLOWER_USER
                  name: kubechat-config
            - name: DJANGO_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: DJANGO_LOG_LEVEL
                  name: kubechat-config
            - name: MODEL_FAMILIES
              valueFrom:
                configMapKeyRef:
                  key: MODEL_FAMILIES
                  name: kubechat-config
            - name: POSTGRES_DB
              value: "{{ .Values.django.metaDBDatabase }}"
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.metaDBSecret }}
                  key: host
            - name: POSTGRES_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.metaDBSecret }}
                  key: port
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.metaDBSecret }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.django.metaDBSecret }}
                  key: password
            - name: VECTOR_DB_CONTEXT
              valueFrom:
                configMapKeyRef:
                  key: VECTOR_DB_CONTEXT
                  name: kubechat-config
            - name: VECTOR_DB_TYPE
              valueFrom:
                configMapKeyRef:
                  key: VECTOR_DB_TYPE
                  name: kubechat-config
            {{- if .Values.django.openaiAPIKey }}
            - name: OPENAI_API_KEY
              valueFrom:
                configMapKeyRef:
                  key: OPENAI_API_KEY
                  name: kubechat-config
                  optional: true
            {{- end }}
            {{- if .Values.django.openaiProxy }}
            - name: OPENAI_API_PROXY
              valueFrom:
                configMapKeyRef:
                  key: OPENAI_API_PROXY
                  name: kubechat-config
            {{- end }}
            - name: MEDIA_ROOT
              value: /data/media
            - name: CODE_STORAGE_DIR
              value: /data/codegen
            - name: PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION
              value: python
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: FEISHU_APP_ID
              valueFrom:
                  configMapKeyRef:
                    key: FEISHU_APP_ID
                    name: kubechat-config
            - name: FEISHU_APP_SECRET
              valueFrom:
                configMapKeyRef:
                  key: FEISHU_APP_SECRET
                  name: kubechat-config
            - name: FEISHU_ENCRIPT_KEY
              valueFrom:
                configMapKeyRef:
                  key: FEISHU_ENCRYPT_KEY
                  name: kubechat-config
            - name: MAX_BOT_COUNT
              valueFrom:
                configMapKeyRef:
                  key: MAX_BOT_COUNT
                  name: kubechat-config
            - name: MAX_COLLECTION_COUNT
              valueFrom:
                configMapKeyRef:
                  key: MAX_COLLECTION_COUNT
                  name: kubechat-config
            - name: MAX_DOCUMENT_COUNT
              valueFrom:
                configMapKeyRef:
                  key: MAX_DOCUMENT_COUNT
                  name: kubechat-config
            - name: MAX_CONVERSATION_COUNT
              valueFrom:
                configMapKeyRef:
                  key: MAX_CONVERSATION_COUNT
                  name: kubechat-config
            - name: EMBEDDING_MODEL
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_MODEL
                  name: kubechat-config
            - name: EMBEDDING_DEVICE
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_DEVICE
                  name: kubechat-config
            - name: EMBEDDING_BACKEND
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_BACKEND
                  name: kubechat-config
            - name: EMBEDDING_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_SERVICE_URL
                  name: kubechat-config
            - name: EMBEDDING_SERVICE_MODEL
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_SERVICE_MODEL
                  name: kubechat-config
            - name: EMBEDDING_SERVICE_MODEL_UID
              valueFrom:
                configMapKeyRef:
                  key: EMBEDDING_SERVICE_MODEL_UID
                  name: kubechat-config
            - name: RERANK_BACKEND
              valueFrom:
                configMapKeyRef:
                  key: RERANK_BACKEND
                  name: kubechat-config
            - name: RERANK_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  key: RERANK_SERVICE_URL
                  name: kubechat-config
            - name: RERANK_SERVICE_MODEL_UID
              valueFrom:
                configMapKeyRef:
                  key: RERANK_SERVICE_MODEL_UID
                  name: kubechat-config
            - name: ES_HOST
              valueFrom:
                configMapKeyRef:
                  key: ES_HOST
                  name: kubechat-config
          image: {{ .Values.image.registry | default "docker.io" }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
          name: kubechat-django
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8000
          {{- with .Values.django.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /data
              name: data
      restartPolicy: Always
      {{- with .Values.django.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        # shared uploaded files between django and celery
        - name: data
          hostPath:
            path: {{ .Values.django.dataPath }}
