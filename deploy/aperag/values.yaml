# Default values for aperag.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


image:
  repository: "docker.io/apecloud/aperag"  # Full image name including registry
  tag: "test12"
  pullPolicy: IfNotPresent

  embedding:
    repository: "docker.io/michaelf34/infinity"  # Full image name including registry
    tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}


ingress:
  className: ""
  annotations: {}

django:
  logLevel: INFO
  dataPath: /data/aperag
  replicaCount: 1
  feishu:
    appID: ""
    appSecret: ""
    encryptKey: ""
  quota:
    maxBotCount: 10
    maxCollectionCount: 50
    maxDocumentCount: 1000
    maxConversationCount: 100
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  authType: cookie
  esHost: http://es-cluster-mdit-http:9200
  redisSecret: redis-redis-account-default
  redisHost: redis-cluster-redis-redis
  redisPort: 6379
  redisUsername: default
  redisPassword: 7zJ683ZaB3
  metaDBSecret: postgresql-conn-credential
  metaDBDatabase: postgres
  metaDBHost: pg-cluster-postgresql-postgresql
  metaDBPort: 5432
  metaDBUsername: postgres
  metaDBPassword: y25a9b2HD4
  adminUser: ""
  adminToken: ""
  vectorDBType: qdrant
  vectorDBContext: '{"url":"http://qdrant-cluster-qdrant-qdrant", "port":6333, "distance":"Cosine", "timeout": 1000}'
  objectStoreType: local
  objectStoreLocalRootDir: /data/objects
  # S3 object store settings (when objectStoreType is s3)
  objectStoreS3Endpoint: ""
  objectStoreS3Region: ""
  objectStoreS3AccessKey: ""
  objectStoreS3SecretKey: ""
  objectStoreS3Bucket: aperag
  objectStoreS3PrefixPath: ""
  objectStoreS3UsePathStyle: "True"
  # Chunking settings
  chunkSize: 400
  chunkOverlapSize: 20
  embeddingMaxChunksInBatch: 16
  # Email settings
  emailHost: smtp.gmail.com
  emailPort: 587
  emailUseTls: "True"
  emailHostUser: ""
  emailHostPassword: ""
  defaultFromEmail: noreply@aperag.com
  siteUrl: http://localhost:8000
  # Registration
  registerMode: unlimited
  # Chat
  chatConsumerImplementation: document-qa
  # Rerank settings
  rerankServiceModel: "jina-reranker-v2-base-multilingual"
  rerankServiceTokenApiKey: ""
  rerankBackend: "jina_ai"
  rerankServiceUrl: https://api.jina.ai/v1/rerank
  rerankServiceModelUid: ""
  # django must be co-located with celery-worker in order to handle uploaded documents
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.aperag.io/component: celery-worker
          topologyKey: kubernetes.io/hostname
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.aperag.io/component: django
            topologyKey: kubernetes.io/hostname

celery-worker:
  replicaCount: 1
  embeddingDevice: "cpu"
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.aperag.io/component: celery-worker
          topologyKey: kubernetes.io/hostname

celery-beat:
  replicaCount: 1
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

flower:
  replicaCount: 1
  user: admin
  password: admin
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

# Frontend configuration
frontend:
  replicaCount: 1
  image:
    repository: "aperag-frontend"  # Full image name including registry
    tag: "test2"
    pullPolicy: IfNotPresent
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi
  affinity: {}
  # Frontend configuration values for settings.js
  title: "ApeRAG"
  favicon: ""
  logoDark: ""
  logoLight: ""
  github: "https://github.com/apecloud/ApeRAG"
  publicIps: []
