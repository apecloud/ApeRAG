image:
  repository: "docker.io/apecloud/aperag"  # Full image name including registry
  tag: "v0.5.0-alpha.21"
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

service:
  type: ClusterIP

ingress:
  className: ""
  annotations: {}

postgres:
  POSTGRES_HOST: "pg-cluster-postgresql-postgresql"
  POSTGRES_PORT: "5432"
  POSTGRES_DB: "postgres"
  # The name of the Secret containing PostgreSQL username and password (e.g., "username" and "password" keys).
  # Example: "pg-cluster-postgresql-account-postgres" (references your Kubeblocks credential Secret)
  POSTGRES_CREDENTIALS_SECRET_NAME: "pg-cluster-postgresql-account-postgres"
  # Username and Password Priority:
  # 1. If POSTGRES_CREDENTIALS_SECRET_NAME is set, attempts to fetch 'username' and 'password' from that Secret.
  # 2. If POSTGRES_CREDENTIALS_SECRET_NAME is empty, uses the direct values of POSTGRES_USER and POSTGRES_PASSWORD.
  # 3. If direct values are also empty, defaults to "postgres" for user or forces a failure for password.
  # ⚠️ Recommend to use POSTGRES_CREDENTIALS_SECRET_NAME
  POSTGRES_USER: "postgres" # Default PostgreSQL user
  # Password (Sensitive information, strongly recommended NOT to set directly in values.yaml):
  # Only use this if you are NOT using POSTGRES_CREDENTIALS_SECRET_NAME and accept the security implications.
  # ⚠️ Strongly discourage directly setting sensitive passwords here. Use Secrets for production.
  # ⚠️ Recommend to use POSTGRES_CREDENTIALS_SECRET_NAME
  POSTGRES_PASSWORD: ""

redis:
  REDIS_HOST: "redis-cluster-redis-redis"
  REDIS_PORT: "6379"
  # The name of the Secret containing Redis credentials (e.g., "password" key).
  # Example: "redis-cluster-redis-account-default"
  REDIS_CREDENTIALS_SECRET_NAME: "redis-cluster-redis-account-default" # Or your actual Redis secret name
  # User for Redis connection. Default: "default"
  # ⚠️ Recommend to use REDIS_CREDENTIALS_SECRET_NAME
  REDIS_USER: "default"
  # Password for Redis connection.
  # ⚠️ Strongly discourage directly setting sensitive passwords here. Use Secrets for production.
  # ⚠️ Recommend to use REDIS_CREDENTIALS_SECRET_NAME
  REDIS_PASSWORD: "redis"

elasticsearch:
  # Hostname for the Elasticsearch HTTP service.
  # Default: "es-cluster-mdit-http" (Kubeblocks Elasticsearch SVC name)
  ES_HOST: "es-cluster-mdit-http"
  # Port for the Elasticsearch HTTP service. Default: "9200"
  ES_PORT: "9200"
  # Protocol for Elasticsearch connection. Default: "http" or "https"
  ES_PROTOCOL: "http"
  # The name of the Secret containing Elasticsearch credentials (e.g., "username" and "password" keys).
  # Example: "es-cluster-mdit-account-default"
  ES_CREDENTIALS_SECRET_NAME: "" # Fill this if you have an ES secret
  # User for Elasticsearch connection (if authentication is enabled).
  # ⚠️ Recommend to use ES_CREDENTIALS_SECRET_NAME
  ES_USER: ""
  # Password for Elasticsearch connection (if authentication is enabled).
  # ⚠️ Strongly discourage directly setting sensitive passwords here. Use Secrets for production.
  # ⚠️ Recommend to use ES_CREDENTIALS_SECRET_NAME
  ES_PASSWORD: ""

django:
  dataPath: /data/aperag
  replicaCount: 1
  resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # django must be co-located with celery-worker in order to handle uploaded documents
  affinity:
    podAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.aperag.io/component: celery-worker
          topologyKey: kubernetes.io/hostname
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.aperag.io/component: django
            topologyKey: kubernetes.io/hostname
  env:
    # Auth
    AUTH_TYPE: cookie
    AUTH0_DOMAIN: ""
    AUTH0_CLIENT_ID: ""
    AUTHING_DOMAIN: ""
    AUTHING_APP_ID: ""
    LOGTO_DOMAIN: ""
    LOGTO_APP_ID: ""
    # Logging
    DJANGO_LOG_LEVEL: INFO
    # Celery
    CELERY_FLOWER_USER: admin
    CELERY_FLOWER_PASSWORD: admin
    # Vector DB
    VECTOR_DB_TYPE: qdrant
    VECTOR_DB_CONTEXT: '{"url":"http://qdrant-cluster-qdrant-qdrant", "port":6333, "distance":"Cosine", "timeout": 1000}'
    # Object Store
    OBJECT_STORE_TYPE: local
    OBJECT_STORE_LOCAL_ROOT_DIR: /data/objects
    OBJECT_STORE_S3_ENDPOINT: ""
    OBJECT_STORE_S3_REGION: ""
    OBJECT_STORE_S3_ACCESS_KEY: ""
    OBJECT_STORE_S3_SECRET_KEY: ""
    OBJECT_STORE_S3_BUCKET: aperag
    OBJECT_STORE_S3_PREFIX_PATH: ""
    OBJECT_STORE_S3_USE_PATH_STYLE: "True"
    # doc-ray
    DOCRAY_HOST: ""
    DEBUG: "False"
    FEISHU_APP_ID: ""
    FEISHU_APP_SECRET: ""
    FEISHU_ENCRYPT_KEY: ""
    MAX_BOT_COUNT: 10
    MAX_COLLECTION_COUNT: 50
    MAX_DOCUMENT_COUNT: 1000
    MAX_CONVERSATION_COUNT: 100
    EMBEDDING_MAX_CHUNKS_IN_BATCH: 16
    # RERANK
    RERANK_BACKEND: jina_ai
    RERANK_SERVICE_URL: https://api.jina.ai/v1/rerank
    RERANK_SERVICE_MODEL: jina-reranker-v2-base-multilingual
    RERANK_SERVICE_TOKEN_API_KEY: ""
    # Chunking
    CHUNK_SIZE: 400
    CHUNK_OVERLAP_SIZE: 20
    TIKTOKEN_CACHE_DIR: /root/.cache/tiktoken
    DEFAULT_ENCODING_MODEL: cl100k_base
    TOKENIZERS_PARALLELISM: "false"


celery-worker:
  replicaCount: 1
  embeddingDevice: "cpu"
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              app.aperag.io/component: celery-worker
          topologyKey: kubernetes.io/hostname

celerybeat:
  replicaCount: 1
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

flower:
  replicaCount: 1
  user: admin
  password: admin
  resources: { }
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

# Frontend configuration
frontend:
  replicaCount: 1
  image:
    repository: "docker.io/apecloud/aperag-frontend"  # Full image name including registry
    tag: "v0.5.0-alpha.21"
    pullPolicy: IfNotPresent
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 50m
    #   memory: 64Mi
  affinity: {}
  # Frontend configuration values for settings.js
  title: "ApeRAG"
  favicon: ""
  logoDark: ""
  logoLight: ""
  github: "https://github.com/apecloud/ApeRAG"
  publicIps: []
