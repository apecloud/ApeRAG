apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "aperag.labels" . | nindent 4 }}
  name: celerybeat
spec:
  replicas: {{ .Values.celerybeat.replicaCount }}
  selector:
    matchLabels:
      {{- include "aperag.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "aperag.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - args:
            - /bin/sh
            - -c
            - |
              /app/scripts/entrypoint.sh /app/scripts/start-celery-beat.sh
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          name: aperag-celerybeat
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.postgres.enabled }}
            - name: POSTGRES_HOST
              value: {{ .Values.postgres.POSTGRES_HOST | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgres.POSTGRES_PORT | quote }}
            - name: POSTGRES_DB
              value: {{ .Values.postgres.POSTGRES_DB | quote }}
            - name: POSTGRES_USER
              {{- if .Values.postgres.POSTGRES_CREDENTIALS_SECRET_NAME }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.POSTGRES_CREDENTIALS_SECRET_NAME }}
                  key: username
              {{- else }}
              value: {{ .Values.postgres.POSTGRES_USER | default "postgres" | quote }}
              {{- end }}
            - name: POSTGRES_PASSWORD
              {{- if .Values.postgres.POSTGRES_CREDENTIALS_SECRET_NAME }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.POSTGRES_CREDENTIALS_SECRET_NAME }}
                  key: password
              {{- else }}
              value: {{ .Values.postgres.POSTGRES_PASSWORD | default "postgres" | quote }}
              {{- end }}
            {{- end }}
            {{- if .Values.redis.enabled }}
            - name: REDIS_HOST
              value: {{ .Values.redis.REDIS_HOST | quote }}
            - name: REDIS_PORT
              value: {{ .Values.redis.REDIS_PORT | quote }}
            - name: REDIS_USER
              {{- if .Values.redis.REDIS_CREDENTIALS_SECRET_NAME }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.REDIS_CREDENTIALS_SECRET_NAME }}
                  key: username
              {{- else }}
              value: {{ .Values.redis.REDIS_USER | default "default" | quote }}
              {{- end }}
            - name: REDIS_PASSWORD
              {{- if .Values.redis.REDIS_CREDENTIALS_SECRET_NAME }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.REDIS_CREDENTIALS_SECRET_NAME }}
                  key: password
              {{- else }}
              value: {{ .Values.redis.REDIS_PASSWORD | default "redis" | quote }}
              {{- end }}
            {{- end }}
            {{- if .Values.elasticsearch.enabled }}
            - name: ES_HOST_NAME
              value: {{ .Values.elasticsearch.ES_HOST | quote }}
            - name: ES_PORT
              value: {{ .Values.elasticsearch.ES_PORT | default "9200" | quote }}
            - name: ES_PROTOCOL
              value: {{ .Values.elasticsearch.ES_PROTOCOL | default "http" | quote }}
            {{- if .Values.elasticsearch.ES_CREDENTIALS_SECRET_NAME }}
            - name: ES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.ES_CREDENTIALS_SECRET_NAME }}
                  key: username
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearch.ES_CREDENTIALS_SECRET_NAME }}
                  key: password
            {{- else if .Values.elasticsearch.ES_USER }}
            - name: ES_USER
              value: {{ .Values.elasticsearch.ES_USER | quote }}
            - name: ES_PASSWORD
              value: {{ .Values.elasticsearch.ES_PASSWORD | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.neo4j.enabled }}
            - name: NEO4J_HOST
              value: {{ .Values.neo4j.NEO4J_HOST | quote }}
            - name: NEO4J_PORT
              value: {{ .Values.neo4j.NEO4J_PORT | default "7687" | quote }}
            - name: NEO4J_USERNAME
              {{- if .Values.neo4j.NEO4J_CREDENTIALS_SECRET_NAME }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.neo4j.NEO4J_CREDENTIALS_SECRET_NAME }}
                  key: username
              {{- else }}
              value: {{ .Values.neo4j.NEO4J_USERNAME | default "neo4j" | quote }}
              {{- end }}
            - name: NEO4J_PASSWORD
              {{- if .Values.neo4j.NEO4J_CREDENTIALS_SECRET_NAME }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.neo4j.NEO4J_CREDENTIALS_SECRET_NAME }}
                  key: password
              {{- else }}
              value: {{ .Values.neo4j.NEO4J_PASSWORD | default "neo4j" | quote }}
              {{- end }}
            {{- end }}
            {{- if .Values.nebula.enabled }}
            - name: NEBULA_HOST
              value: {{ .Values.nebula.NEBULA_HOST | quote }}
            - name: NEBULA_PORT
              value: {{ .Values.nebula.NEBULA_PORT | default "9669" | quote }}
            - name: NEBULA_USER
              {{- if .Values.nebula.NEBULA_CREDENTIALS_SECRET_NAME }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.nebula.NEBULA_CREDENTIALS_SECRET_NAME }}
                  key: username
              {{- else }}
              value: {{ .Values.nebula.NEBULA_USER | default "root" | quote }}
              {{- end }}
            - name: NEBULA_PASSWORD
              {{- if .Values.nebula.NEBULA_CREDENTIALS_SECRET_NAME }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.nebula.NEBULA_CREDENTIALS_SECRET_NAME }}
                  key: password
              {{- else }}
              value: {{ .Values.nebula.NEBULA_PASSWORD | default "nebula" | quote }}
              {{- end }}
            - name: NEBULA_MAX_CONNECTION_POOL_SIZE
              value: {{ .Values.nebula.NEBULA_MAX_CONNECTION_POOL_SIZE | default "10" | quote }}
            - name: NEBULA_TIMEOUT
              value: {{ .Values.nebula.NEBULA_TIMEOUT | default "60000" | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.celerybeat.resources | nindent 12 }}
          volumeMounts:
            - name: env-config
              mountPath: /app/.env
              subPath: .env
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: env-config
          secret:
            secretName: aperag-env
status: {}
