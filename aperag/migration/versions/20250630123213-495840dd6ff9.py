"""empty message

Revision ID: 495840dd6ff9
Revises: 66b96592c84a
Create Date: 2025-06-30 12:32:13.869581

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '495840dd6ff9'
down_revision: Union[str, None] = '66b96592c84a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lightrag_graph_edges',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('source_entity_id', sa.String(length=255), nullable=False),
    sa.Column('target_entity_id', sa.String(length=255), nullable=False),
    sa.Column('weight', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('keywords', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source_id', sa.Text(), nullable=True),
    sa.Column('file_path', sa.Text(), nullable=True),
    sa.Column('workspace', sa.String(length=255), nullable=False),
    sa.Column('createtime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updatetime', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workspace', 'source_entity_id', 'target_entity_id', name='uq_lightrag_graph_edges_workspace_source_target')
    )
    op.create_index('idx_lightrag_edges_weight', 'lightrag_graph_edges', ['workspace', 'weight'], unique=False)
    op.create_index('idx_lightrag_edges_workspace_source', 'lightrag_graph_edges', ['workspace', 'source_entity_id'], unique=False)
    op.create_index('idx_lightrag_edges_workspace_target', 'lightrag_graph_edges', ['workspace', 'target_entity_id'], unique=False)
    op.create_table('lightrag_graph_nodes',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('entity_id', sa.String(length=256), nullable=False),
    sa.Column('entity_name', sa.String(length=255), nullable=True),
    sa.Column('entity_type', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source_id', sa.Text(), nullable=True),
    sa.Column('file_path', sa.Text(), nullable=True),
    sa.Column('workspace', sa.String(length=255), nullable=False),
    sa.Column('createtime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updatetime', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workspace', 'entity_id', name='uq_lightrag_graph_nodes_workspace_entity')
    )
    op.create_index('idx_lightrag_nodes_entity_name', 'lightrag_graph_nodes', ['workspace', 'entity_name'], unique=False)
    op.create_index('idx_lightrag_nodes_entity_type', 'lightrag_graph_nodes', ['workspace', 'entity_type'], unique=False)
    op.drop_table('lightrag_doc_status')
    op.drop_table('lightrag_doc_full')
    op.drop_table('lightrag_llm_cache')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lightrag_llm_cache',
    sa.Column('workspace', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('mode', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.Column('original_prompt', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('return_value', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('update_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('workspace', 'id', 'mode', name=op.f('lightrag_llm_cache_pkey'))
    )
    op.create_table('lightrag_doc_full',
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('workspace', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('doc_name', sa.VARCHAR(length=1024), autoincrement=False, nullable=True),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('meta', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('create_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('update_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', 'workspace', name=op.f('lightrag_doc_full_pkey'))
    )
    op.create_table('lightrag_doc_status',
    sa.Column('workspace', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('content_summary', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content_length', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('chunks_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('pending', 'processing', 'processed', 'failed', name='lightragdocstatus'), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('workspace', 'id', name=op.f('uq_lightrag_doc_status_workspace_id'))
    )
    op.drop_index('idx_lightrag_nodes_entity_type', table_name='lightrag_graph_nodes')
    op.drop_index('idx_lightrag_nodes_entity_name', table_name='lightrag_graph_nodes')
    op.drop_table('lightrag_graph_nodes')
    op.drop_index('idx_lightrag_edges_workspace_target', table_name='lightrag_graph_edges')
    op.drop_index('idx_lightrag_edges_workspace_source', table_name='lightrag_graph_edges')
    op.drop_index('idx_lightrag_edges_weight', table_name='lightrag_graph_edges')
    op.drop_table('lightrag_graph_edges')
    # ### end Alembic commands ###
