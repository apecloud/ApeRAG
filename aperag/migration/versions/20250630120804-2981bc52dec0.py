"""empty message

Revision ID: 2981bc52dec0
Revises: 66b96592c84a
Create Date: 2025-06-30 12:08:04.553533

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2981bc52dec0'
down_revision: Union[str, None] = '66b96592c84a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lightrag_graph_edges',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('source_entity_id', sa.String(length=255), nullable=False),
    sa.Column('target_entity_id', sa.String(length=255), nullable=False),
    sa.Column('weight', sa.Numeric(precision=10, scale=6), nullable=False),
    sa.Column('keywords', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source_id', sa.Text(), nullable=True),
    sa.Column('file_path', sa.Text(), nullable=True),
    sa.Column('workspace', sa.String(length=255), nullable=False),
    sa.Column('createtime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updatetime', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workspace', 'source_entity_id', 'target_entity_id', name='uq_lightrag_graph_edges_workspace_source_target')
    )
    op.create_index('idx_lightrag_edges_weight', 'lightrag_graph_edges', ['workspace', 'weight'], unique=False)
    op.create_index('idx_lightrag_edges_workspace_source', 'lightrag_graph_edges', ['workspace', 'source_entity_id'], unique=False)
    op.create_index('idx_lightrag_edges_workspace_target', 'lightrag_graph_edges', ['workspace', 'target_entity_id'], unique=False)
    op.create_table('lightrag_graph_nodes',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('entity_id', sa.String(length=256), nullable=False),
    sa.Column('entity_name', sa.String(length=255), nullable=True),
    sa.Column('entity_type', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('source_id', sa.Text(), nullable=True),
    sa.Column('file_path', sa.Text(), nullable=True),
    sa.Column('workspace', sa.String(length=255), nullable=False),
    sa.Column('createtime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updatetime', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('workspace', 'entity_id', name='uq_lightrag_graph_nodes_workspace_entity')
    )
    op.create_index('idx_lightrag_nodes_entity_name', 'lightrag_graph_nodes', ['workspace', 'entity_name'], unique=False)
    op.create_index('idx_lightrag_nodes_entity_type', 'lightrag_graph_nodes', ['workspace', 'entity_type'], unique=False)
    # Check if constraint already exists before creating it
    # This handles the case where the constraint was created by a previous migration
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    constraints = inspector.get_unique_constraints('lightrag_doc_status')
    constraint_exists = any(
        constraint['name'] == 'uq_lightrag_doc_status_workspace_id'
        for constraint in constraints
    )
    
    if not constraint_exists:
        op.create_unique_constraint('uq_lightrag_doc_status_workspace_id', 'lightrag_doc_status', ['workspace', 'id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if constraint exists before dropping it
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    constraints = inspector.get_unique_constraints('lightrag_doc_status')
    constraint_exists = any(
        constraint['name'] == 'uq_lightrag_doc_status_workspace_id'
        for constraint in constraints
    )
    
    if constraint_exists:
        op.drop_constraint('uq_lightrag_doc_status_workspace_id', 'lightrag_doc_status', type_='unique')
    op.drop_index('idx_lightrag_nodes_entity_type', table_name='lightrag_graph_nodes')
    op.drop_index('idx_lightrag_nodes_entity_name', table_name='lightrag_graph_nodes')
    op.drop_table('lightrag_graph_nodes')
    op.drop_index('idx_lightrag_edges_workspace_target', table_name='lightrag_graph_edges')
    op.drop_index('idx_lightrag_edges_workspace_source', table_name='lightrag_graph_edges')
    op.drop_index('idx_lightrag_edges_weight', table_name='lightrag_graph_edges')
    op.drop_table('lightrag_graph_edges')
    # ### end Alembic commands ###
