"""empty message

Revision ID: 63d90cdaba57
Revises: 23c0533b6b63
Create Date: 2025-06-24 00:28:18.326732

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '63d90cdaba57'
down_revision: Union[str, None] = '23c0533b6b63'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('document_index', sa.Column('status', sa.Enum('pending', 'creating', 'active', 'deleting', 'deletion_in_progress', 'failed', name='documentindexstatus'), nullable=False))
    op.alter_column('document_index', 'observed_version',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_index(op.f('ix_document_indexes_actual_state'), table_name='document_index')
    op.drop_index(op.f('ix_document_indexes_desired_state'), table_name='document_index')
    op.drop_index(op.f('ix_document_indexes_document_id'), table_name='document_index')
    op.drop_index(op.f('ix_document_indexes_id'), table_name='document_index')
    op.drop_index(op.f('ix_document_indexes_index_type'), table_name='document_index')
    op.create_index(op.f('ix_document_index_document_id'), 'document_index', ['document_id'], unique=False)
    op.create_index(op.f('ix_document_index_id'), 'document_index', ['id'], unique=False)
    op.create_index(op.f('ix_document_index_index_type'), 'document_index', ['index_type'], unique=False)
    op.create_index(op.f('ix_document_index_status'), 'document_index', ['status'], unique=False)
    op.drop_column('document_index', 'desired_state')
    op.drop_column('document_index', 'actual_state')
    op.create_unique_constraint('uq_lightrag_doc_status_workspace_id', 'lightrag_doc_status', ['workspace', 'id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_lightrag_doc_status_workspace_id', 'lightrag_doc_status', type_='unique')
    op.add_column('document_index', sa.Column('actual_state', postgresql.ENUM('absent', 'creating', 'present', 'deleting', 'failed', name='indexactualstate'), autoincrement=False, nullable=True))
    op.add_column('document_index', sa.Column('desired_state', postgresql.ENUM('present', 'absent', name='indexdesiredstate'), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_document_index_status'), table_name='document_index')
    op.drop_index(op.f('ix_document_index_index_type'), table_name='document_index')
    op.drop_index(op.f('ix_document_index_id'), table_name='document_index')
    op.drop_index(op.f('ix_document_index_document_id'), table_name='document_index')
    op.create_index(op.f('ix_document_indexes_index_type'), 'document_index', ['index_type'], unique=False)
    op.create_index(op.f('ix_document_indexes_id'), 'document_index', ['id'], unique=False)
    op.create_index(op.f('ix_document_indexes_document_id'), 'document_index', ['document_id'], unique=False)
    op.create_index(op.f('ix_document_indexes_desired_state'), 'document_index', ['desired_state'], unique=False)
    op.create_index(op.f('ix_document_indexes_actual_state'), 'document_index', ['actual_state'], unique=False)
    op.alter_column('document_index', 'observed_version',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('document_index', 'status')
    # ### end Alembic commands ###
