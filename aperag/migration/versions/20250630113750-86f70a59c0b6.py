"""empty message

Revision ID: 86f70a59c0b6
Revises: 66b96592c84a
Create Date: 2025-06-30 11:37:50.244505

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '86f70a59c0b6'
down_revision: Union[str, None] = '66b96592c84a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('uq_lightrag_doc_status_workspace_id', 'lightrag_doc_status', ['workspace', 'id'])
    op.alter_column('lightrag_graph_edges', 'weight',
               existing_type=sa.NUMERIC(precision=10, scale=6),
               nullable=False,
               existing_server_default=sa.text('0.0'))
    op.alter_column('lightrag_graph_edges', 'createtime',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('lightrag_graph_edges', 'updatetime',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('idx_lightrag_edges_workspace_degree'), table_name='lightrag_graph_edges')
    op.drop_index(op.f('idx_lightrag_edges_workspace_source_target'), table_name='lightrag_graph_edges')
    op.drop_constraint(op.f('lightrag_graph_edges_workspace_source_entity_id_target_enti_key'), 'lightrag_graph_edges', type_='unique')
    op.create_unique_constraint('uq_lightrag_graph_edges_workspace_source_target', 'lightrag_graph_edges', ['workspace', 'source_entity_id', 'target_entity_id'])
    op.alter_column('lightrag_graph_nodes', 'createtime',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('lightrag_graph_nodes', 'updatetime',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index(op.f('idx_lightrag_nodes_workspace_entity'), table_name='lightrag_graph_nodes')
    op.drop_constraint(op.f('lightrag_graph_nodes_workspace_entity_id_key'), 'lightrag_graph_nodes', type_='unique')
    op.create_unique_constraint('uq_lightrag_graph_nodes_workspace_entity', 'lightrag_graph_nodes', ['workspace', 'entity_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_lightrag_graph_nodes_workspace_entity', 'lightrag_graph_nodes', type_='unique')
    op.create_unique_constraint(op.f('lightrag_graph_nodes_workspace_entity_id_key'), 'lightrag_graph_nodes', ['workspace', 'entity_id'])
    op.create_index(op.f('idx_lightrag_nodes_workspace_entity'), 'lightrag_graph_nodes', ['workspace', 'entity_id'], unique=False)
    op.alter_column('lightrag_graph_nodes', 'updatetime',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('lightrag_graph_nodes', 'createtime',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('uq_lightrag_graph_edges_workspace_source_target', 'lightrag_graph_edges', type_='unique')
    op.create_unique_constraint(op.f('lightrag_graph_edges_workspace_source_entity_id_target_enti_key'), 'lightrag_graph_edges', ['workspace', 'source_entity_id', 'target_entity_id'])
    op.create_index(op.f('idx_lightrag_edges_workspace_source_target'), 'lightrag_graph_edges', ['workspace', 'source_entity_id', 'target_entity_id'], unique=False)
    op.create_index(op.f('idx_lightrag_edges_workspace_degree'), 'lightrag_graph_edges', ['workspace', 'source_entity_id', 'target_entity_id'], unique=False)
    op.alter_column('lightrag_graph_edges', 'updatetime',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('lightrag_graph_edges', 'createtime',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('lightrag_graph_edges', 'weight',
               existing_type=sa.NUMERIC(precision=10, scale=6),
               nullable=True,
               existing_server_default=sa.text('0.0'))
    op.drop_constraint('uq_lightrag_doc_status_workspace_id', 'lightrag_doc_status', type_='unique')
    # ### end Alembic commands ###
