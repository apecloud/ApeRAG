"""empty message

Revision ID: fc6cc94f112c
Revises: 12ea6d2bf365
Create Date: 2025-06-15 20:58:28.239362

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fc6cc94f112c'
down_revision: Union[str, None] = '12ea6d2bf365'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('document_indexes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.String(length=24), nullable=False),
    sa.Column('index_type', sa.Enum('vector', 'fulltext', 'graph', name='documentindextype'), nullable=False),
    sa.Column('desired_state', sa.Enum('present', 'absent', name='indexdesiredstate'), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.String(length=256), nullable=False),
    sa.Column('actual_state', sa.Enum('absent', 'creating', 'present', 'deleting', 'failed', name='indexactualstate'), nullable=False),
    sa.Column('observed_version', sa.Integer(), nullable=False),
    sa.Column('index_data', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('gmt_created', sa.DateTime(timezone=True), nullable=False),
    sa.Column('gmt_updated', sa.DateTime(timezone=True), nullable=False),
    sa.Column('gmt_last_reconciled', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id', 'index_type', name='uq_document_index')
    )
    op.create_index(op.f('ix_document_indexes_actual_state'), 'document_indexes', ['actual_state'], unique=False)
    op.create_index(op.f('ix_document_indexes_desired_state'), 'document_indexes', ['desired_state'], unique=False)
    op.create_index(op.f('ix_document_indexes_document_id'), 'document_indexes', ['document_id'], unique=False)
    op.create_index(op.f('ix_document_indexes_id'), 'document_indexes', ['id'], unique=False)
    op.create_index(op.f('ix_document_indexes_index_type'), 'document_indexes', ['index_type'], unique=False)
    op.drop_column('document', 'relate_ids')
    op.drop_column('document', 'fulltext_index_status')
    op.drop_column('document', 'vector_index_status')
    op.drop_column('document', 'graph_index_status')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('document', sa.Column('graph_index_status', postgresql.ENUM('PENDING', 'RUNNING', 'COMPLETE', 'FAILED', 'SKIPPED', name='documentindexstatus'), autoincrement=False, nullable=False))
    op.add_column('document', sa.Column('vector_index_status', postgresql.ENUM('PENDING', 'RUNNING', 'COMPLETE', 'FAILED', 'SKIPPED', name='documentindexstatus'), autoincrement=False, nullable=False))
    op.add_column('document', sa.Column('fulltext_index_status', postgresql.ENUM('PENDING', 'RUNNING', 'COMPLETE', 'FAILED', 'SKIPPED', name='documentindexstatus'), autoincrement=False, nullable=False))
    op.add_column('document', sa.Column('relate_ids', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_document_indexes_index_type'), table_name='document_indexes')
    op.drop_index(op.f('ix_document_indexes_id'), table_name='document_indexes')
    op.drop_index(op.f('ix_document_indexes_document_id'), table_name='document_indexes')
    op.drop_index(op.f('ix_document_indexes_desired_state'), table_name='document_indexes')
    op.drop_index(op.f('ix_document_indexes_actual_state'), table_name='document_indexes')
    op.drop_table('document_indexes')
    # ### end Alembic commands ###
