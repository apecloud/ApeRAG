embeddings:
  post:
    summary: Create embeddings
    description: |
      Generate embeddings for the given input text(s) using the specified provider and model.
      This endpoint is compatible with OpenAI's embeddings API format, but includes an additional
      'provider' parameter to specify which LLM provider to use.
      
      The endpoint supports both single text inputs and batch processing of multiple texts.
      It requires the provider to be configured in the user's Model Service Provider (MSP) settings
      with a valid API key.
    tags:
      - llm
      - embedding
    security:
      - BearerAuth: []
      - CookieAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/llm.yaml#/embeddingRequest'
          examples:
            single_text:
              summary: Single text embedding
              description: Generate embedding for a single text input
              value:
                provider: "openai"
                model: "text-embedding-3-small"
                input: "The food was delicious and the waiter was very attentive."
            multiple_texts:
              summary: Batch text embeddings
              description: Generate embeddings for multiple text inputs
              value:
                provider: "openai"
                model: "text-embedding-3-small"
                input:
                  - "The food was delicious and the waiter was very attentive."
                  - "I had a wonderful experience at this restaurant."
                  - "The service was excellent and the ambiance was perfect."
            different_provider:
              summary: Using different provider
              description: Generate embeddings using a different provider
              value:
                provider: "anthropic"
                model: "text-embedding-ada-002"
                input: "This is a sample text for embedding generation."
    responses:
      '200':
        description: Successfully generated embeddings
        content:
          application/json:
            schema:
              $ref: '../components/schemas/llm.yaml#/embeddingResponse'
            examples:
              single_result:
                summary: Single embedding result
                description: Response for single text input
                value:
                  object: "list"
                  data:
                    - object: "embedding"
                      embedding: [0.0023064255, -0.009327292, 0.015797421, -0.0076543210]
                      index: 0
                  model: "text-embedding-3-small"
                  usage:
                    prompt_tokens: 16
                    total_tokens: 16
              multiple_results:
                summary: Multiple embedding results
                description: Response for multiple text inputs
                value:
                  object: "list"
                  data:
                    - object: "embedding"
                      embedding: [0.0023064255, -0.009327292, 0.015797421, -0.0076543210]
                      index: 0
                    - object: "embedding"
                      embedding: [0.0012345678, -0.0087654321, 0.0199887766, -0.0034567890]
                      index: 1
                  model: "text-embedding-3-small"
                  usage:
                    prompt_tokens: 32
                    total_tokens: 32
      '400':
        description: Bad request - Invalid input parameters
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
            examples:
              empty_input:
                summary: Empty input
                description: Input cannot be empty
                value:
                  success: false
                  message: "Input cannot be empty"
              invalid_provider:
                summary: Provider not found
                description: Specified provider is not configured for the user
                value:
                  success: false
                  message: "Provider 'invalid_provider' not found for user"
              model_not_found:
                summary: Model not found
                description: Specified model not found for the provider
                value:
                  success: false
                  message: "Model 'invalid_model' not found for provider 'openai'"
      '401':
        description: Unauthorized - Authentication required
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
            example:
              success: false
              message: "Authentication required"
      '500':
        description: Internal server error - Embedding generation failed
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
            examples:
              embedding_error:
                summary: Embedding generation failed
                description: Error during embedding generation process
                value:
                  success: false
                  message: "Embedding generation failed: API rate limit exceeded"
              configuration_error:
                summary: Configuration error
                description: Provider configuration issue
                value:
                  success: false
                  message: "API key not configured for provider 'openai'"

rerank:
  post:
    summary: Rerank documents
    description: |
      Rerank a list of documents based on their relevance to a given query using the specified 
      provider and model. This endpoint follows the industry-standard rerank API format used by
      providers like Cohere, Jina AI, and others.
      
      The endpoint supports both simple text lists and structured document objects with metadata.
      Documents are returned ordered by relevance score (highest first), with optional top_k 
      filtering to limit the number of results.
      
      The provider must be configured in the user's Model Service Provider (MSP) settings
      with a valid API key and support rerank functionality.
    tags:
      - llm
      - rerank
    security:
      - BearerAuth: []
      - CookieAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/llm.yaml#/rerankRequest'
          examples:
            simple_text_list:
              summary: Simple text documents
              description: Rerank a list of text documents
              value:
                provider: "cohere"
                model: "rerank-english-v3.0"
                query: "What is the capital of France?"
                documents:
                  - "Paris is the capital of France."
                  - "London is the capital of England."
                  - "Berlin is the capital of Germany."
                  - "Madrid is the capital of Spain."
                top_k: 3
                return_documents: true
            structured_documents:
              summary: Documents with metadata
              description: Rerank documents with additional metadata
              value:
                provider: "jina_ai"
                model: "jina-reranker-v1-base-en"
                query: "artificial intelligence machine learning"
                documents:
                  - text: "Machine learning is a subset of artificial intelligence that enables computers to learn and improve from experience."
                    metadata:
                      id: "doc_1"
                      source: "encyclopedia"
                      category: "technology"
                  - text: "Natural language processing is a branch of AI that helps computers understand human language."
                    metadata:
                      id: "doc_2"
                      source: "research_paper"
                      category: "nlp"
                  - text: "The weather today is sunny with a temperature of 25 degrees Celsius."
                    metadata:
                      id: "doc_3"
                      source: "weather_report"
                      category: "weather"
                top_k: 2
                return_documents: true
            different_provider:
              summary: Using different provider
              description: Rerank using a different provider and model
              value:
                provider: "huggingface"
                model: "BAAI/bge-reranker-base"
                query: "renewable energy sources"
                documents:
                  - "Solar energy is a clean and renewable source of power."
                  - "Coal is a non-renewable fossil fuel."
                  - "Wind energy harnesses the power of wind to generate electricity."
                  - "Nuclear energy provides a large amount of power from uranium."
                top_k: 5
                return_documents: false
    responses:
      '200':
        description: Successfully reranked documents
        content:
          application/json:
            schema:
              $ref: '../components/schemas/llm.yaml#/rerankResponse'
            examples:
              simple_rerank_result:
                summary: Simple rerank result
                description: Response for simple text documents with full content
                value:
                  object: "list"
                  data:
                    - index: 0
                      relevance_score: 0.95
                      document:
                        text: "Paris is the capital of France."
                    - index: 3
                      relevance_score: 0.12
                      document:
                        text: "Madrid is the capital of Spain."
                    - index: 1
                      relevance_score: 0.08
                      document:
                        text: "London is the capital of England."
                  model: "rerank-english-v3.0"
                  usage:
                    total_tokens: 156
              structured_rerank_result:
                summary: Structured documents result
                description: Response for documents with metadata
                value:
                  object: "list"
                  data:
                    - index: 0
                      relevance_score: 0.92
                      document:
                        text: "Machine learning is a subset of artificial intelligence that enables computers to learn and improve from experience."
                        metadata:
                          id: "doc_1"
                          source: "encyclopedia"
                          category: "technology"
                    - index: 1
                      relevance_score: 0.87
                      document:
                        text: "Natural language processing is a branch of AI that helps computers understand human language."
                        metadata:
                          id: "doc_2"
                          source: "research_paper"
                          category: "nlp"
                  model: "jina-reranker-v1-base-en"
                  usage:
                    total_tokens: 284
              score_only_result:
                summary: Scores without documents
                description: Response when return_documents=false
                value:
                  object: "list"
                  data:
                    - index: 0
                      relevance_score: 0.89
                    - index: 2
                      relevance_score: 0.76
                    - index: 3
                      relevance_score: 0.23
                  model: "BAAI/bge-reranker-base"
                  usage:
                    total_tokens: 198
      '400':
        description: Bad request - Invalid input parameters
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
            examples:
              empty_query:
                summary: Empty query
                description: Query cannot be empty
                value:
                  success: false
                  message: "Query cannot be empty"
              empty_documents:
                summary: Empty documents
                description: Documents list cannot be empty
                value:
                  success: false
                  message: "Documents list cannot be empty"
              invalid_provider:
                summary: Provider not found
                description: Specified provider is not configured for the user
                value:
                  success: false
                  message: "Provider 'invalid_provider' not found for user"
              model_not_found:
                summary: Model not found
                description: Specified model not found for the provider
                value:
                  success: false
                  message: "Model 'invalid_model' not found for provider 'cohere'"
              too_many_documents:
                summary: Too many documents
                description: Document count exceeds provider limits
                value:
                  success: false
                  message: "Too many documents: 1500 exceeds maximum 1000 for model 'rerank-english-v3.0'"
              invalid_top_k:
                summary: Invalid top_k value
                description: top_k must be positive and not exceed document count
                value:
                  success: false
                  message: "top_k value 15 exceeds document count 10"
      '401':
        description: Unauthorized - Authentication required
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
            example:
              success: false
              message: "Authentication required"
      '500':
        description: Internal server error - Rerank operation failed
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
            examples:
              rerank_error:
                summary: Rerank operation failed
                description: Error during rerank process
                value:
                  success: false
                  message: "Rerank operation failed: API rate limit exceeded"
              configuration_error:
                summary: Configuration error
                description: Provider configuration issue
                value:
                  success: false
                  message: "API key not configured for provider 'cohere'" 