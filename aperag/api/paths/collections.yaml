collections:
  get:
    summary: List collections
    description: Get a list of collections
    security:
      - BearerAuth: []
    parameters:
      - name: page
        in: query
        schema:
          type: integer
          default: 1
      - name: page_size
        in: query
        schema:
          type: integer
          default: 10
    responses:
      '200':
        description: List of collections
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/collectionList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

  post:
    summary: Create a new collection
    description: Create a new collection
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/collection.yaml#/collectionCreate'
    responses:
      '201':
        description: Collection created successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/collection'

collection:
  get:
    summary: Get collection details
    description: Get details of a specific collection
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Collection details
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/collection'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Collection not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

  delete:
    summary: Delete a collection
    description: Delete a collection
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '204':
        description: Collection deleted successfully
  
  put:
    summary: Update a collection
    description: Update a collection
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/collection.yaml#/collectionUpdate'
    responses:
      '200':
        description: Collection updated successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/collection'

documents:
  get:
    summary: List documents
    description: Get a list of documents
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          default: 1
      - name: page_size
        in: query
        schema:
          type: integer
          default: 10
    responses:
      '200':
        description: List of documents
        content:
          application/json:
            schema:
              $ref: '../components/schemas/document.yaml#/documentList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

  post:
    summary: Create a new document
    description: Create a new document
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/document.yaml#/documentCreate'
    responses:
      '200':
        description: Document created successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/document.yaml#/documentList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

document:
  get:
    summary: Get document details
    description: Get details of a specific document
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: document_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Document details
        content:
          application/json:
            schema:
              $ref: '../components/schemas/document.yaml#/document'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Document not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
  delete:
    summary: Delete a document
    description: Delete a document
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: document_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '204':
        description: Document deleted successfully
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Document not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

rebuild_indexes:
  post:
    summary: Rebuild document indexes
    description: Rebuild specified types of indexes for a document
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: document_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/document.yaml#/rebuildIndexesRequest'
    responses:
      '204':
        description: Index rebuild initiated successfully
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Document not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

searches:
  get:
    summary: Get search history
    description: Get the history of searches
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Search history
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/searchResultList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

  post:
    summary: Search in collection
    description: Search in a collection with different search types
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/collection.yaml#/searchRequest'
    responses:
      '200':
        description: Search results
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/searchResult'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

search_detail:
  delete:
    summary: Delete a search
    description: Delete a search
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: search_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Search deleted successfully
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

graph_labels:
  get:
    summary: Get knowledge graph labels
    description: Get all available node labels in the collection's knowledge graph
    tags:
      - graph
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
        description: Collection ID
    responses:
      '200':
        description: Available graph labels retrieved successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/graph.yaml#/graphLabelsResponse'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Collection not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

graph:
  get:
    summary: Get knowledge graph
    description: |
      Retrieve knowledge graph data. Two modes are supported:
      1. Overview mode (default): Uses the entire graph ("*") and intelligently selects the most important nodes
      2. Subgraph mode: When 'label' is provided, returns a subgraph centered on that node
      
      Node selection prioritization:
      1. For overview: nodes with highest degree (most connections), automatically removing isolated nodes
      2. For subgraph: nodes within specified hops from the starting node
      
      The overview mode is optimized for visualization performance by prioritizing well-connected nodes.
    tags:
      - graph
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
        description: Collection ID
      - name: label
        in: query
        required: false
        schema:
          type: string
        description: |
          Optional. If provided, returns a subgraph centered on this node.
          If not provided, returns an overview of the most important nodes in the entire graph.
        example: "墨香居"
      - name: max_nodes
        in: query
        required: false
        schema:
          type: integer
          minimum: 10
          maximum: 1000
          default: 200
        description: Maximum number of nodes to return
        example: 200
      - name: max_depth
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          maximum: 5
          default: 2
        description: |
          Maximum depth when in subgraph mode (when 'label' is provided).
          Ignored in overview mode.
        example: 2

    responses:
      '200':
        description: Knowledge graph retrieved successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/graph.yaml#/knowledgeGraph'
      '400':
        description: Bad request - invalid parameters
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Collection not found or label not found in graph
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'