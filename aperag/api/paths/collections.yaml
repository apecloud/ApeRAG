collections:
  get:
    summary: List collections
    description: Get a list of collections
    security:
      - BearerAuth: []
    parameters:
      - name: page
        in: query
        schema:
          type: integer
          default: 1
      - name: page_size
        in: query
        schema:
          type: integer
          default: 10
    responses:
      '200':
        description: List of collections
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/collectionList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

  post:
    summary: Create a new collection
    description: Create a new collection
    security:
      - BearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/collection.yaml#/collectionCreate'
    responses:
      '201':
        description: Collection created successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/collection'

collection:
  get:
    summary: Get collection details
    description: Get details of a specific collection
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Collection details
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/collection'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Collection not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

  delete:
    summary: Delete a collection
    description: Delete a collection
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '204':
        description: Collection deleted successfully
  
  put:
    summary: Update a collection
    description: Update a collection
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/collection.yaml#/collectionUpdate'
    responses:
      '200':
        description: Collection updated successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/collection'

documents:
  get:
    summary: List documents
    description: Get a list of documents
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: page
        in: query
        schema:
          type: integer
          default: 1
      - name: page_size
        in: query
        schema:
          type: integer
          default: 10
    responses:
      '200':
        description: List of documents
        content:
          application/json:
            schema:
              $ref: '../components/schemas/document.yaml#/documentList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

  post:
    summary: Create a new document
    description: Create a new document
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/document.yaml#/documentCreate'
    responses:
      '200':
        description: Document created successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/document.yaml#/documentList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

document:
  get:
    summary: Get document details
    description: Get details of a specific document
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: document_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Document details
        content:
          application/json:
            schema:
              $ref: '../components/schemas/document.yaml#/document'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Document not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
  delete:
    summary: Delete a document
    description: Delete a document
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: document_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '204':
        description: Document deleted successfully
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Document not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
  put:
    summary: Update a document
    description: Update a document
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: document_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/document.yaml#/documentUpdate'
    responses:
      '200':
        description: Document updated successfully
        content:
          application/json:
            schema:
              $ref: '../components/schemas/document.yaml#/document'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'
      '404':
        description: Document not found
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

searchTest:
  delete:
    summary: Delete a search test
    description: Delete a search test
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
      - name: search_test_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '204':
        description: Search test deleted successfully
      '401':
        description: Unauthorized

searchTests:
  get:
    summary: Get search test history
    description: Get the history of search tests
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    responses:
      '200':
        description: Search test history
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/searchTestResultList'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'

  post:
    summary: Test search in collection
    description: Test search in a collection with different search types
    security:
      - BearerAuth: []
    parameters:
      - name: collection_id
        in: path
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../components/schemas/collection.yaml#/searchTestRequest'
    responses:
      '200':
        description: Search results
        content:
          application/json:
            schema:
              $ref: '../components/schemas/collection.yaml#/searchTestResult'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '../components/schemas/common.yaml#/failResponse'