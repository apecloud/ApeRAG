# Generated by Django 4.2.4 on 2023-09-05 06:38

import django.db.models.deletion
from django.db import migrations, models

import aperag.store.utils


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Bot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=256)),
                ("title", models.CharField(max_length=256)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("ACTIVE", "Active"), ("DELETED", "Deleted")],
                        max_length=16,
                    ),
                ),
                ("config", models.TextField()),
                ("gmt_created", models.DateTimeField(auto_now_add=True)),
                ("gmt_updated", models.DateTimeField(auto_now=True)),
                ("gmt_deleted", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Chat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=256)),
                (
                    "peer_type",
                    models.CharField(
                        choices=[("system", "System"), ("feishu", "Feishu")],
                        default="system",
                        max_length=16,
                    ),
                ),
                ("peer_id", models.CharField(max_length=256, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("ACTIVE", "Active"), ("DELETED", "Deleted")],
                        max_length=16,
                    ),
                ),
                ("summary", models.TextField()),
                ("gmt_created", models.DateTimeField(auto_now_add=True)),
                ("gmt_updated", models.DateTimeField(auto_now=True)),
                ("gmt_deleted", models.DateTimeField(blank=True, null=True)),
                (
                    "bot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="aperag.bot"
                    ),
                ),
            ],
            options={
                "unique_together": {("peer_type", "peer_id")},
            },
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=256)),
                ("description", models.TextField(blank=True, null=True)),
                ("user", models.CharField(max_length=256)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INACTIVE", "Inactive"),
                            ("ACTIVE", "Active"),
                            ("DELETED", "Deleted"),
                        ],
                        max_length=16,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("document", "Document"),
                            ("database", "Database"),
                            ("code", "Code"),
                        ],
                        max_length=16,
                    ),
                ),
                ("config", models.TextField()),
                ("gmt_created", models.DateTimeField(auto_now_add=True)),
                ("gmt_updated", models.DateTimeField(auto_now=True)),
                ("gmt_deleted", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="CollectionSyncHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=256)),
                ("total_documents", models.PositiveIntegerField()),
                ("new_documents", models.PositiveIntegerField(default=0)),
                ("deleted_documents", models.PositiveIntegerField(default=0)),
                ("modified_documents", models.PositiveIntegerField(default=0)),
                ("processing_documents", models.PositiveIntegerField(default=0)),
                ("failed_documents", models.PositiveIntegerField(default=0)),
                ("successful_documents", models.PositiveIntegerField(default=0)),
                ("total_documents_to_sync", models.PositiveIntegerField(default=0)),
                ("execution_time", models.DurationField(null=True)),
                ("start_time", models.DateTimeField()),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="aperag.collection",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="bot",
            name="collections",
            field=models.ManyToManyField(to="aperag.collection"),
        ),
        migrations.CreateModel(
            name="MessageFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=256)),
                ("message_id", models.CharField(max_length=256)),
                ("upvote", models.IntegerField(default=0)),
                ("downvote", models.IntegerField(default=0)),
                ("relate_ids", models.TextField(null=True)),
                ("question", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("RUNNING", "Running"),
                            ("COMPLETE", "Complete"),
                            ("FAILED", "Failed"),
                        ],
                        max_length=16,
                        null=True,
                    ),
                ),
                ("original_answer", models.TextField(blank=True, null=True)),
                ("revised_answer", models.TextField(blank=True, null=True)),
                ("gmt_created", models.DateTimeField(auto_now_add=True)),
                ("gmt_updated", models.DateTimeField(auto_now=True)),
                ("gmt_deleted", models.DateTimeField(blank=True, null=True)),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="aperag.chat"
                    ),
                ),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="aperag.collection",
                    ),
                ),
            ],
            options={
                "unique_together": {("chat_id", "message_id")},
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1024)),
                ("user", models.CharField(max_length=256)),
                ("config", models.TextField(null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("RUNNING", "Running"),
                            ("COMPLETE", "Complete"),
                            ("FAILED", "Failed"),
                            ("DELETED", "Deleted"),
                        ],
                        max_length=16,
                    ),
                ),
                ("size", models.BigIntegerField()),
                (
                    "file",
                    models.FileField(upload_to=aperag.store.utils.upload_document_path),
                ),
                ("relate_ids", models.TextField()),
                ("metadata", models.TextField(default="{}")),
                ("gmt_created", models.DateTimeField(auto_now_add=True)),
                ("gmt_updated", models.DateTimeField(auto_now=True)),
                ("gmt_deleted", models.DateTimeField(blank=True, null=True)),
                (
                    "collection",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="aperag.collection",
                    ),
                ),
            ],
            options={
                "unique_together": {("collection", "name")},
            },
        ),
    ]
