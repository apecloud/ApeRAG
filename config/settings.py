"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path

import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
env_file = os.path.join(BASE_DIR, ".env")
if os.path.exists(env_file):
    env.read_env(env_file)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-!_e+#j5vn=jg9fd(i#3jn0-eypw-62om4^gn*s$xq7(%4w-w@t"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool("DEBUG", default=False)

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    # 'smart_chart.smartui',
    # 'smart_chart.echart',
    "simpleui",
    "kubechat",
    "corsheaders",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "django_prometheus.middleware.PrometheusBeforeMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_prometheus.middleware.PrometheusAfterMiddleware"
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
DATABASES = {"default": env.db("DATABASE_URL", default=f"sqlite:///{BASE_DIR}/db.sqlite3")}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

MEDIA_ROOT = env.str("MEDIA_ROOT", ".")

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# CORS
CORS_ALLOWED_ORIGINS = [
]
CORS_ALLOWED_ORIGIN_REGEXES = [
    r"^https://\w+\.kubeblocks\.io$",
    r"http://localhost:*",
    # TODO reconsider this
    r"http://*:*",
    r"https://*:*",
]

# CSRF
CSRF_TRUSTED_ORIGINS = ["https://*.kubeblocks.io", "https://*.apecloud.com"]

# Auth
AUTH_TYPE = env.str("AUTH_TYPE", default="none")

# Load Auth0 application settings into memory
AUTH0_DOMAIN = env.str("AUTH0_DOMAIN", default="kubechat-dev.auting.cn")
AUTH0_CLIENT_ID = env.str("AUTH0_CLIENT_ID", default="")

# Load Authing application settings into memory
AUTHING_DOMAIN = env.str("AUTHING_DOMAIN", default="kubechat.authing.cn")
AUTHING_APP_ID = env.str("AUTHING_APP_ID", default="")

# Celery
# ------------------------------------------------------------------------------
if USE_TZ:
    # https://docs.celeryq.dev/en/stable/userguide/configuration.html#std:setting-timezone
    CELERY_TIMEZONE = TIME_ZONE
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#std:setting-broker_url
# CELERY_BROKER_URL = env("CELERY_BROKER_URL", default="redis://redis:6379/0")
CELERY_BROKER_URL = env("CELERY_BROKER_URL", default="redis://localhost:6379/0")
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#std:setting-result_backend
CELERY_RESULT_BACKEND = CELERY_BROKER_URL
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#result-extended
CELERY_RESULT_EXTENDED = True
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#result-backend-always-retry
# https://github.com/celery/celery/pull/6122
CELERY_RESULT_BACKEND_ALWAYS_RETRY = True
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#result-backend-max-retries
CELERY_RESULT_BACKEND_MAX_RETRIES = 10
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#std:setting-accept_content
CELERY_ACCEPT_CONTENT = ["json"]
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#std:setting-task_serializer
CELERY_TASK_SERIALIZER = "json"
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#std:setting-result_serializer
CELERY_RESULT_SERIALIZER = "json"
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#task-time-limit
# TODO: set to whatever value is adequate in your circumstances
# CELERY_TASK_TIME_LIMIT = 5 * 60
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#task-soft-time-limit
# TODO: set to whatever value is adequate in your circumstances
# CELERY_TASK_SOFT_TIME_LIMIT = 60
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#beat-scheduler
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers:DatabaseScheduler"
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#worker-send-task-events
CELERY_WORKER_SEND_TASK_EVENTS = True
# https://docs.celeryq.dev/en/stable/userguide/configuration.html#std-setting-task_send_sent_event
CELERY_TASK_SEND_SENT_EVENT = True
CELERY_TASK_TRACK_STARTED = True
INSTALLED_APPS += ["django_celery_beat"]

LOCAL_QUEUE_NAME = env.str("LOCAL_QUEUE_NAME", default="")

# WebSockets
INSTALLED_APPS += ["channels"]

ASGI_APPLICATION = "config.asgi.application"

# Logging
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s"
        }
    },
    "handlers": {
        "console": {
            "level": "INFO",
            "class": "logging.StreamHandler",
            "formatter": "verbose",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": env.str("DJANGO_LOG_LEVEL", default="INFO"),
    },
}

# LLM Model
MODEL_SERVER = env.str("MODEL_SERVER", default="http://127.0.0.1:8000")
MODEL_FAMILIES = env.str("MODEL_FAMILIES", default='[]')

EMBEDDING_DEVICE = env.str("EMBEDDING_DEVICE", default="cpu")
EMBEDDING_MODEL = env.str("EMBEDDING_MODEL", default="text2vec")
EMBEDDING_BACKEND = env.str("EMBEDDING_BACKEND", default="local")
EMBEDDING_SERVICE_URL = env.str("EMBEDDING_SERVICE_URL", default="http://localhost:9997")
# model is used by infinity, model_uid is used by xinference
EMBEDDING_SERVICE_MODEL = env.str("EMBEDDING_SERVICE_MODEL", default="bge-large-zh-v1.5")
EMBEDDING_SERVICE_MODEL_UID = env.str("EMBEDDING_SERVICE_MODEL_UID", default="")
SENSITIVE_FILTER_MODEL = env.str("SENSITIVE_FILTER_MODEL", default="")

RERANK_BACKEND = env.str("RERANK_BACKEND", default="local")
RERANK_SERVICE_URL = env.str("RERANK_SERVICE_URL", default="http://localhost:9997")
# xinference only needs model_uid, doesn't need model name
RERANK_SERVICE_MODEL_UID = env.str("RERANK_SERVICE_MODEL_UID", default="")

VECTOR_SIZE = {
    "huggingface": 768,
    "text2vec": 768,
    "bge": 1024
}

# Memory backend
MEMORY_REDIS_URL = env.str("MEMORY_REDIS_URL", default="redis://127.0.0.1:6379/1")

VECTOR_DB_TYPE = env.str("VECTOR_DB_TYPE", default="qdrant")
VECTOR_DB_CONTEXT = env.str(
    "VECTOR_DB_CONTEXT", '{"url":"http://localhost", "port":6333, "distance":"Cosine"}'
)

CODE_STORAGE_DIR = env.str("CODE_STORAGE_DIR", default=str(BASE_DIR))

# simpleui
SIMPLEUI_CONFIG = {
    'system_keep': True,
    # 'menu_display': [],
    'dynamic': False,  # Set whether to enable dynamic menus. Default is False.
}
# Hide the advertisement links on the right side of SimpleUI and the usage analysis.
SIMPLEUI_HOME_INFO = False
SIMPLEUI_ANALYSIS = False

# Hide the quick operations and recent actions on the homepage.
SIMPLEUI_HOME_QUICK = True
SIMPLEUI_HOME_ACTION = True

SIMPLEUI_HOME_ICON = 'fa fa-eye'

# Set the Home icon redirect link. It will open in a new window.
SIMPLEUI_INDEX = 'https://www.apecloud.com'

# prometheus
INSTALLED_APPS += ["django_prometheus"]

STATIC_ROOT = BASE_DIR / "static"

# feishu app used for auth
FEISHU_APP_ID = env.str("FEISHU_APP_ID", default="")
FEISHU_APP_SECRET = env.str("FEISHU_APP_SECRET", default="")
FEISHU_ENCRYPT_KEY = env.str("FEISHU_ENCRYPT_KEY", default="")

MAX_BOT_COUNT = env.int("MAX_BOT_COUNT", default=10)
MAX_COLLECTION_COUNT = env.int("MAX_COLLECTION_COUNT", default=50)
MAX_DOCUMENT_COUNT = env.int("MAX_DOCUMENT_COUNT", default=1000)
MAX_CONVERSATION_COUNT = env.int("MAX_CONVERSATION_COUNT", default=100)

ENABLE_QA_GENERATOR = env.bool("ENABLE_QA_GENERATOR", default=False)

CHAT_CONSUMER_IMPLEMENTATION = env.str("CHAT_CONSUMER_IMPLEMENTATION", default="document-qa")

REDIS_HOST = env.str("REDIS_HOST", default="localhost")
REDIS_PORT = env.str("REDIS_PORT", default="6379")
REDIS_USERNAME = env.str("REDIS_USERNAME", default="")
REDIS_PASSWORD = env.str("REDIS_PASSWORD", default="")

ENABLE_KEYWORD_SEARCH = env.bool("ENABLE_KEYWORD_SEARCH", default=True)
ES_HOST = env.str("ES_HOST", "http://localhost:9200")

BAICHUAN_API_KEY = env.str("BAICHUAN_API_KEY", default="")
BAICHUAN_SECRET_KEY = env.str("BAICHUAN_SECRET_KEY", default="")

QIANFAN_API_KEY = env.str("QIANFAN_API_KEY", default="")
QIANFAN_SECRET_KEY = env.str("QIANFAN_SECRET_KEY", default="")

OPENAI_API_PROXY = env.str("OPENAI_API_PROXY", default="{}")

WHISPER_HOST = env.str("WHISPER_HOST", default="http://openai-whisper-asr-service:9000")
PADDLEOCR_HOST = env.str("PADDLEOCR_HOST", default="http://paddleocr-hubserving-service:8866")

ADMIN_USER = env.str("ADMIN_USER", default="kubechat")
